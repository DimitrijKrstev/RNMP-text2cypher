[
  {
    "question": "Get the names of all constructors.",
    "sql": "SELECT name FROM constructors;",
    "cypher": "MATCH (c:constructors) RETURN c.name;"
  },
  {
    "question": "Show the driver with driverRef 'hamilton'.",
    "sql": "SELECT * FROM drivers WHERE driverRef = 'hamilton';",
    "cypher": "MATCH (d:drivers {driverRef: 'hamilton'}) RETURN d"
  },
  {
    "question": "List all circuits located in the UK.",
    "sql": "SELECT * FROM circuits WHERE country = 'UK';",
    "cypher": "MATCH (c:circuits {country:'UK'}) RETURN c;"
  },
  {
    "question": "List all drivers with nationality 'Canadian'.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'Canadian';",
    "cypher": "MATCH (d:drivers {nationality: 'Canadian'}) RETURN d"
  },
  {
    "question": "Show all drivers with surname 'Schumacher'.",
    "sql": "SELECT * FROM drivers WHERE surname = 'Schumacher';",
    "cypher": "MATCH (d:drivers {surname: 'Schumacher'})\nRETURN d"
  },
  {
    "question": "List all driver birthdates ordered by birthday.",
    "sql": "SELECT dob FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN d.dob AS dob ORDER BY dob"
  },
  {
    "question": "Show all constructors that have 'Team' in their name.",
    "sql": "SELECT * FROM constructors WHERE name LIKE '%Team%';",
    "cypher": "MATCH (c:constructors) WHERE c.name CONTAINS 'Team' RETURN c;"
  },
  {
    "question": "Show the constructor with the smallest ID.",
    "sql": "SELECT * FROM constructors ORDER BY constructorId ASC LIMIT 1;",
    "cypher": "MATCH (c:constructors) RETURN c ORDER BY c.constructorId ASC LIMIT 1;"
  },
  {
    "question": "Show all distinct race years.",
    "sql": "SELECT DISTINCT year FROM races;",
    "cypher": "MATCH (r:races) RETURN DISTINCT r.year;"
  },
  {
    "question": "Show all distinct circuit countries.",
    "sql": "SELECT DISTINCT country FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN DISTINCT c.country;"
  },
  {
    "question": "Show all constructor IDs.",
    "sql": "SELECT constructorId FROM constructors;",
    "cypher": "MATCH (c:constructors) RETURN c.constructorId;"
  },
  {
    "question": "Show the number of circuits in each country.",
    "sql": "SELECT country, COUNT(*) FROM circuits GROUP BY country;",
    "cypher": "MATCH (c:circuits) RETURN c.country, COUNT(c);"
  },
  {
    "question": "Show the total number of distinct circuit countries.",
    "sql": "SELECT COUNT(DISTINCT country) FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN COUNT(DISTINCT c.country);"
  },
  {
    "question": "List the first 10 drivers ordered by surname alphabetically.",
    "sql": "SELECT * FROM drivers ORDER BY surname LIMIT 10;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.surname LIMIT 10;"
  },
  {
    "question": "Show all race IDs.",
    "sql": "SELECT raceId FROM races;",
    "cypher": "MATCH (r:races) RETURN r.raceId;"
  },
  {
    "question": "Show the total number of circuits with altitude above 1000.",
    "sql": "SELECT COUNT(*) FROM circuits WHERE alt > 1000;",
    "cypher": "MATCH (c:circuits) WHERE c.alt > 1000 RETURN COUNT(c);"
  },
  {
    "question": "Show the earliest driver birthdate.",
    "sql": "SELECT MIN(dob) FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN MIN(d.dob);"
  },
  {
    "question": "Get the total number of drivers in the database.",
    "sql": "SELECT COUNT(*) FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN count(d);"
  },
  {
    "question": "List all distinct race names.",
    "sql": "SELECT DISTINCT name FROM races;",
    "cypher": "MATCH (r:races) RETURN DISTINCT r.name;"
  },
  {
    "question": "Find the nationality of the constructor named 'Ferrari'.",
    "sql": "SELECT nationality FROM constructors WHERE name = 'Ferrari';",
    "cypher": "MATCH (c:constructors {name: 'Ferrari'}) RETURN c.nationality;"
  },
  {
    "question": "Show the number of constructors per nationality.",
    "sql": "SELECT nationality, COUNT(*) FROM constructors GROUP BY nationality;",
    "cypher": "MATCH (c:constructors) RETURN c.nationality, COUNT(c);"
  },
  {
    "question": "Show all circuits in Italy.",
    "sql": "SELECT * FROM circuits WHERE country = 'Italy';",
    "cypher": "MATCH (c:circuits {country:'Italy'}) RETURN c;"
  },
  {
    "question": "Show all race names ordered by name.",
    "sql": "SELECT name FROM races ORDER BY name;",
    "cypher": "MATCH (r:races) RETURN r.name ORDER BY r.name;"
  },
  {
    "question": "List all drivers with nationality 'Brazilian'.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'Brazilian';",
    "cypher": "MATCH (d:drivers {nationality:'Brazilian'}) RETURN d;"
  },
  {
    "question": "List all constructor names order by name.",
    "sql": "SELECT name FROM constructors ORDER BY name;",
    "cypher": "MATCH (c:constructors) RETURN c.name ORDER BY c.name;"
  },
  {
    "question": "List all constructors with names starting with 'M'.",
    "sql": "SELECT * FROM constructors WHERE name LIKE 'M%';",
    "cypher": "MATCH (c:constructors) WHERE c.name STARTS WITH 'M' RETURN c;"
  },
  {
    "question": "Show all constructors with nationality 'French'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'French';",
    "cypher": "MATCH (c:constructors {nationality:'French'}) RETURN c;"
  },
  {
    "question": "Show the first 5 drivers ordered by forename.",
    "sql": "SELECT * FROM drivers ORDER BY forename LIMIT 5;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.forename LIMIT 5;"
  },
  {
    "question": "Show the number of races held in Australia.",
    "sql": "SELECT COUNT(*) FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Australia';",
    "cypher": "MATCH (ra:races)-[:HELD_AT]->(c:circuits {country:'Australia'}) RETURN COUNT(ra);"
  },
  {
    "question": "Show all drivers with nationality 'German'.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'German';",
    "cypher": "MATCH (d:drivers {nationality:'German'}) RETURN d;"
  },
  {
    "question": "Show all constructors with name ending in 'Team'.",
    "sql": "SELECT * FROM constructors WHERE name LIKE '%Team';",
    "cypher": "MATCH (c:constructors) WHERE c.name ENDS WITH 'Team' RETURN c;"
  },
  {
    "question": "Show all constructors with nationality 'Spanish'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'Spanish';",
    "cypher": "MATCH (c:constructors {nationality:'Spanish'}) RETURN c;"
  },
  {
    "question": "List all race dates.",
    "sql": "SELECT date FROM races;",
    "cypher": "MATCH (r:races) RETURN r.date;"
  },
  {
    "question": "List the last 3 constructors alphabetically.",
    "sql": "SELECT * FROM constructors ORDER BY name DESC LIMIT 3;",
    "cypher": "MATCH (c:constructors) RETURN c ORDER BY c.name DESC LIMIT 3;"
  },
  {
    "question": "List all distinct constructor nationalities.",
    "sql": "SELECT DISTINCT nationality FROM constructors;",
    "cypher": "MATCH (c:constructors) RETURN DISTINCT c.nationality;"
  },
  {
    "question": "List the first 5 races ordered by year.",
    "sql": "SELECT * FROM races ORDER BY year ASC LIMIT 5;",
    "cypher": "MATCH (r:races) RETURN r ORDER BY r.year ASC LIMIT 5;"
  },
  {
    "question": "List all drivers whose surname ends with 'son'.",
    "sql": "SELECT * FROM drivers WHERE surname LIKE '%son';",
    "cypher": "MATCH (d:drivers) WHERE d.surname ENDS WITH 'son' RETURN d;"
  },
  {
    "question": "Show all drivers born in 1980.",
    "sql": "SELECT * FROM drivers WHERE strftime('%Y', dob) = '1980';",
    "cypher": "MATCH (d:drivers) WHERE toString(d.dob) STARTS WITH '1980' OR tostring(d.dob) ENDS WITH '1980' RETURN d;"
  },
  {
    "question": "List all races that happened in March.",
    "sql": "SELECT * FROM races WHERE strftime('%m', date) = '03';",
    "cypher": "MATCH (r:races) WHERE substring(toString(r.date),5,2)='03' RETURN r;"
  },
  {
    "question": "Show the total number of constructors.",
    "sql": "SELECT COUNT(*) FROM constructors;",
    "cypher": "MATCH (c:constructors) RETURN COUNT(c);"
  },
  {
    "question": "Show the number of races per circuit.",
    "sql": "SELECT circuitId, COUNT(*) FROM races GROUP BY circuitId;",
    "cypher": "MATCH (r:races) RETURN r.circuitId, COUNT(r);"
  },
  {
    "question": "Show all circuits located in Japan.",
    "sql": "SELECT * FROM circuits WHERE country = 'Japan';",
    "cypher": "MATCH (c:circuits {country:'Japan'}) RETURN c;"
  },
  {
    "question": "Show all circuits in Spain.",
    "sql": "SELECT * FROM circuits WHERE country = 'Spain';",
    "cypher": "MATCH (c:circuits {country:'Spain'}) RETURN c;"
  },
  {
    "question": "List all drivers ordered by birthdate.",
    "sql": "SELECT * FROM drivers ORDER BY dob;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.dob;"
  },
  {
    "question": "Get the maximum altitude of any circuit.",
    "sql": "SELECT MAX(alt) FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN MAX(c.alt);"
  },
  {
    "question": "Show the first 5 constructors.",
    "sql": "SELECT * FROM constructors LIMIT 5;",
    "cypher": "MATCH (c:constructors) RETURN c LIMIT 5;"
  },
  {
    "question": "Show all constructors with nationality 'American'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'American';",
    "cypher": "MATCH (c:constructors {nationality:'American'}) RETURN c;"
  },
  {
    "question": "List all circuits ordered by altitude descending.",
    "sql": "SELECT * FROM circuits ORDER BY alt DESC;",
    "cypher": "MATCH (c:circuits) RETURN c ORDER BY c.alt DESC;"
  },
  {
    "question": "Show the total number of drivers.",
    "sql": "SELECT COUNT(*) FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN COUNT(d);"
  },
  {
    "question": "Show the number of circuits per location.",
    "sql": "SELECT location, COUNT(*) FROM circuits GROUP BY location;",
    "cypher": "MATCH (c:circuits) RETURN c.location, COUNT(c);"
  },
  {
    "question": "Show the number of drivers with code not null.",
    "sql": "SELECT COUNT(*) FROM drivers WHERE code IS NOT NULL;",
    "cypher": "MATCH (d:drivers) WHERE d.code IS NOT NULL RETURN COUNT(d);"
  },
  {
    "question": "List all years when the Italian Grand Prix was held, ordered by year.",
    "sql": "SELECT year FROM races WHERE name = 'Italian Grand Prix' ORDER BY year;",
    "cypher": "MATCH (r:races {name: 'Italian Grand Prix'}) RETURN r.year ORDER BY r.year;"
  },
  {
    "question": "List all distinct driver nationalities.",
    "sql": "SELECT DISTINCT nationality FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN DISTINCT d.nationality;"
  },
  {
    "question": "Show the youngest driver.",
    "sql": "SELECT * FROM drivers ORDER BY dob DESC LIMIT 1;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.dob DESC LIMIT 1;"
  },
  {
    "question": "Get the total number of circuits in Italy.",
    "sql": "SELECT COUNT(*) FROM circuits WHERE country = 'Italy';",
    "cypher": "MATCH (c:circuits {country:'Italy'}) RETURN COUNT(c);"
  },
  {
    "question": "Show the number of races per round number.",
    "sql": "SELECT round, COUNT(*) FROM races GROUP BY round;",
    "cypher": "MATCH (r:races) RETURN r.round, COUNT(r);"
  },
  {
    "question": "Show the total number of races.",
    "sql": "SELECT COUNT(*) FROM races;",
    "cypher": "MATCH (r:races) RETURN COUNT(r);"
  },
  {
    "question": "Show all drivers with nationality 'Finnish'.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'Finnish';",
    "cypher": "MATCH (d:drivers {nationality:'Finnish'}) RETURN d;"
  },
  {
    "question": "List all driver last names.",
    "sql": "SELECT surname FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN d.surname;"
  },
  {
    "question": "Show the race names ordered by date.",
    "sql": "SELECT name FROM races ORDER BY date;",
    "cypher": "MATCH (r:races) RETURN r.name ORDER BY r.date;"
  },
  {
    "question": "List the first 5 circuits alphabetically.",
    "sql": "SELECT * FROM circuits ORDER BY name ASC LIMIT 5;",
    "cypher": "MATCH (c:circuits) RETURN c ORDER BY c.name ASC LIMIT 5;"
  },
  {
    "question": "Show all constructors with name containing 'Racing'.",
    "sql": "SELECT * FROM constructors WHERE name LIKE '%Racing%';",
    "cypher": "MATCH (c:constructors) WHERE c.name CONTAINS 'Racing' RETURN c;"
  },
  {
    "question": "List all constructors with nationality 'Japanese'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'Japanese';",
    "cypher": "MATCH (c:constructors {nationality:'Japanese'}) RETURN c;"
  },
  {
    "question": "Show all drivers from Spain.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'Spanish';",
    "cypher": "MATCH (d:drivers {nationality:'Spanish'}) RETURN d;"
  },
  {
    "question": "List the races with name containing 'Grand Prix'.",
    "sql": "SELECT * FROM races WHERE name LIKE '%Grand Prix%';",
    "cypher": "MATCH (r:races) WHERE r.name CONTAINS 'Grand Prix' RETURN r;"
  },
  {
    "question": "List all drivers with nationality 'American'.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'American';",
    "cypher": "MATCH (d:drivers {nationality:'American'}) RETURN d;"
  },
  {
    "question": "Find the number of races held in 2010.",
    "sql": "SELECT COUNT(*) FROM races WHERE year = 2010;",
    "cypher": "MATCH (r:races {year: 2010}) RETURN count(r);"
  },
  {
    "question": "List all constructors with Italian nationality.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'Italian';",
    "cypher": "MATCH (c:constructors {nationality:'Italian'}) RETURN c;"
  },
  {
    "question": "List all drivers with British nationality.",
    "sql": "SELECT * FROM drivers WHERE nationality = 'British';",
    "cypher": "MATCH (d:drivers {nationality:'British'}) RETURN d;"
  },
  {
    "question": "Get the minimum altitude of any circuit.",
    "sql": "SELECT MIN(alt) FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN MIN(c.alt);"
  },
  {
    "question": "Show the total number of races per year.",
    "sql": "SELECT year, COUNT(*) FROM races GROUP BY year;",
    "cypher": "MATCH (r:races) RETURN r.year, COUNT(r);"
  },
  {
    "question": "Show all drivers with code 'HAM'.",
    "sql": "SELECT * FROM drivers WHERE code = 'HAM';",
    "cypher": "MATCH (d:drivers {code:'HAM'}) RETURN d;"
  },
  {
    "question": "Show all drivers with surname containing 'man'.",
    "sql": "SELECT * FROM drivers WHERE surname LIKE '%man%';",
    "cypher": "MATCH (d:drivers) WHERE d.surname CONTAINS 'man' RETURN d;"
  },
  {
    "question": "Show the driver born most recently.",
    "sql": "SELECT * FROM drivers ORDER BY dob DESC LIMIT 1;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.dob DESC LIMIT 1;"
  },
  {
    "question": "Show the number of constructors whose name starts with 'A'.",
    "sql": "SELECT COUNT(*) FROM constructors WHERE name LIKE 'A%';",
    "cypher": "MATCH (c:constructors) WHERE c.name STARTS WITH 'A' RETURN COUNT(c);"
  },
  {
    "question": "Show all races named 'Australian Grand Prix'.",
    "sql": "SELECT * FROM races WHERE name = 'Australian Grand Prix';",
    "cypher": "MATCH (r:races {name:'Australian Grand Prix'}) RETURN r;"
  },
  {
    "question": "List all constructors with nationality 'German'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'German';",
    "cypher": "MATCH (c:constructors {nationality:'German'}) RETURN c;"
  },
  {
    "question": "Show all constructors named Ferrari.",
    "sql": "SELECT * FROM constructors WHERE name = 'Ferrari';",
    "cypher": "MATCH (c:constructors {name:'Ferrari'}) RETURN c;"
  },
  {
    "question": "Show the number of drivers per year of birth, use aliases year and count.",
    "sql": "SELECT strftime('%Y', dob) AS year, COUNT(*) AS count FROM drivers GROUP BY year;",
    "cypher": "MATCH (d:drivers) RETURN substring(d.dob,0,4) AS year, COUNT(d) AS count;"
  },
  {
    "question": "Show all circuit names.",
    "sql": "SELECT name FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN c.name;"
  },
  {
    "question": "Show all driver IDs.",
    "sql": "SELECT driverId FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN d.driverId;"
  },
  {
    "question": "List all distinct race times.",
    "sql": "SELECT DISTINCT time FROM races WHERE time IS NOT NULL;",
    "cypher": "MATCH (r:races) WHERE r.time IS NOT NULL RETURN DISTINCT r.time;"
  },
  {
    "question": "List all constructors with nationality 'British'.",
    "sql": "SELECT * FROM constructors WHERE nationality = 'British';",
    "cypher": "MATCH (c:constructors {nationality:'British'}) RETURN c;"
  },
  {
    "question": "Show all drivers with surname starting with 'A'.",
    "sql": "SELECT * FROM drivers WHERE surname LIKE 'A%';",
    "cypher": "MATCH (d:drivers) WHERE d.surname STARTS WITH 'A' RETURN d;"
  },
  {
    "question": "Show the number of drivers per nationality.",
    "sql": "SELECT nationality, COUNT(*) FROM drivers GROUP BY nationality;",
    "cypher": "MATCH (d:drivers) RETURN d.nationality, COUNT(d);"
  },
  {
    "question": "Show the first 3 circuits by altitude ascending.",
    "sql": "SELECT * FROM circuits ORDER BY alt ASC LIMIT 3;",
    "cypher": "MATCH (c:circuits) RETURN c ORDER BY c.alt ASC LIMIT 3;"
  },
  {
    "question": "List all distinct driver codes.",
    "sql": "SELECT DISTINCT code FROM drivers WHERE code IS NOT NULL;",
    "cypher": "MATCH (d:drivers) WHERE d.code IS NOT NULL RETURN DISTINCT d.code;"
  },
  {
    "question": "Show the codes of all drivers.",
    "sql": "SELECT code FROM drivers WHERE code IS NOT NULL;",
    "cypher": "MATCH (d:drivers) WHERE d.code IS NOT NULL RETURN d.code;"
  },
  {
    "question": "List the circuits in Germany.",
    "sql": "SELECT * FROM circuits WHERE country = 'Germany';",
    "cypher": "MATCH (c:circuits {country:'Germany'}) RETURN c;"
  },
  {
    "question": "Show the latest race year, with alias latest_year.",
    "sql": "SELECT MAX(year) AS latest_year FROM races;",
    "cypher": "MATCH (r:races) RETURN MAX(r.year) AS latest_year;"
  },
  {
    "question": "List all drivers with surname 'Alonso'.",
    "sql": "SELECT * FROM drivers WHERE surname = 'Alonso';",
    "cypher": "MATCH (d:drivers {surname:'Alonso'}) RETURN d;"
  },
  {
    "question": "List all constructors ordered by nationality.",
    "sql": "SELECT * FROM constructors ORDER BY nationality;",
    "cypher": "MATCH (c:constructors) RETURN c ORDER BY c.nationality;"
  },
  {
    "question": "List all drivers born in July.",
    "sql": "SELECT * FROM drivers WHERE strftime('%m', dob) = '07';",
    "cypher": "MATCH (d:drivers) WHERE substring(d.dob,5,2)='07' RETURN d;"
  },
  {
    "question": "Show the total number of circuits, with alias total_circuits.",
    "sql": "SELECT COUNT(*) AS total_circuits FROM circuits;",
    "cypher": "MATCH (c:circuits) RETURN COUNT(c) AS total_circuits;"
  },
  {
    "question": "Show the oldest driver.",
    "sql": "SELECT * FROM drivers ORDER BY dob ASC LIMIT 1;",
    "cypher": "MATCH (d:drivers) RETURN d ORDER BY d.dob ASC LIMIT 1;"
  },
  {
    "question": "Show all distinct race rounds.",
    "sql": "SELECT DISTINCT round FROM races;",
    "cypher": "MATCH (r:races) RETURN DISTINCT r.round;"
  },
  {
    "question": "List all driver first names.",
    "sql": "SELECT forename FROM drivers;",
    "cypher": "MATCH (d:drivers) RETURN d.forename;"
  },
  {
    "question": "List all constructors ordered by name.",
    "sql": "SELECT * FROM constructors ORDER BY name;",
    "cypher": "MATCH (c:constructors) RETURN c ORDER BY c.name;"
  },
  {
    "question": "Show all circuits located in the USA.",
    "sql": "SELECT * FROM circuits WHERE country = 'USA';",
    "cypher": "MATCH (c:circuits {country:'USA'}) RETURN c;"
  },
  {
    "question": "Show the number of drivers with nationality Italian",
    "sql": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Italian'",
    "cypher": "MATCH (d:drivers {nationality: 'Italian'}) RETURN COUNT(d);"
  }
]